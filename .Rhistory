# compute expected value at MAP, for each State
mu <- coef(m5.4)['a'] + coef(m5.4)['b']*d$MedianAgeMarriage.s
# compute residual for each state
m.resid <- d$Marriage.s - mu
plot(Marriage.s ~ MedianAgeMarriage.s, d, col = rangi2)
abline(m5.4)
for(i in 1:length(m.resid)){
x <- d$MedianAgeMarriage.s[i] # x location of line segment
y <- d$Marriage.s[i] # observed enbpoint of line segment
# draw the line segment
lines(c(x, x), c(mu[i], y), lwd = 0.5, col = col.alpha("black", 0.7))
}
# 5.1.3.2 counterfactual plots
# prepare new counterfactual data
A.avg <- mean(d$MedianAgeMarriage.s)
R.seq <- seq(from = -3, to = 3, length.out = 30)
pred.data <- data.frame(
Marriage.s = R.seq,
MedianAgeMarriage.s = A.avg
)
# compute counterfactual mean divorce (mu)
mu <- link(m5.3, data = pred.data)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
#simulate counterfactual divorce outcomess
R.sim <- sim(m5.3, data = pred.data, n = 1e4)
R.PI <- apply(R.sim, 2, PI)
#display predictions, hiding raw data
plot(Divorce ~ Marriage.s, data = d, type = "n")
mtext("MedianAgeMarriage.s = 0")
lines(R.seq, mu.mean)
shade(mu.PI, R.seq)
shade(R.PI, R.seq)
# constant marriage rate
R.avg <- mean(d$Marriage.s)
A.seq <- seq(from = -3, to = 3.5, length.out = 30)
pred.data2 <- data.frame(
Marriage.s = R.avg,
MedianAgeMarriage.s = A.seq
)
mu <- link(m5.3, data = pred.data2)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
A.sim <- sim(m5.3, data = pred.data2, n = 1e4)
A.PI <- apply(A.sim, 2, PI)
plot(Divorce ~ MedianAgeMarriage.s, data = d, type = "n")
mtext("Marriage.s= 0")
lines(A.seq, mu.mean)
shade(mu.PI, A.seq)
shade(A.PI, A.seq)
# call link without specifying new data
mu <- link(m5.3)
#summairze samples across cases
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
# simulate observations
# no new data
divorce.sim <- sim(m5.3, n = 1e4)
divorce.PI <- apply(divorce.sim, 2, PI)
# predicted vs observed
plot(mu.mean ~ d$Divorce, col = rangi2, ylim = range(mu.PI),
xlab = "Observed divorce", ylab = "predicted divorce")
abline(a = 0, b = 1, lty = 2)
for(i in 1:nrow(d)){
lines(rep(d$Divorce[i],2), c(mu.PI[1, i], mu.PI[2, i]), col = rangi2)
}
identify(x = d$Divorce, y = mu.mean, labels = d$Loc, cex = 0.8)
# compute residuals
divorce.resid <- d$Divorce - mu.mean
# 5.2 Masked relationship
data("milk")
d <- milk
str(d)
dcc <- d[complete.cases(d), ]
m5.5 <- map(
alist(
kcal.per.g ~ dnorm(mu, sigma),
mu <- a + bn*neocortex.perc,
a ~ dnorm(0, 100),
bn ~ dnorm(0, 1),
sigma ~ dunif(0, 1)
), data = dcc
)
precis(m5.5, digits = 3)
np.seq <- 0:100
pred.data <- data.frame(neocortex.perc = np.seq)
mu <- link(m5.5, data = pred.data, n = 1e4)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(kcal.per.g ~ neocortex.perc, data = dcc, col = rangi2)
lines(np.seq, mu.mean)
lines(np.seq, mu.PI[1,], lty = 2)
lines(np.seq, mu.PI[2,], lty = 2)
rm(list = ls())
data("WaffleDivorce")
d <- WaffleDivorce
# standardize predictor
d$MedianAgeMarriage.s <- (d$MedianAgeMarriage - mean(d$MedianAgeMarriage))/sd(d$MedianAgeMarriage)
# fit model
m5.1 <- map(
alist(
Divorce ~ dnorm(mu, sigma),
mu <- a + b*MedianAgeMarriage.s,
a ~ dnorm(10, 10),
b ~ dnorm(0, 1),
sigma ~ dunif(0, 10)
), data = d
)
# compute precentile interval of mean
MAM.seq <- seq(from = -3, to = 3.5, length.out = 30)
mu <- link(m5.1, data = data.frame(MedianAgeMarriage.s = MAM.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(Divorce ~ MedianAgeMarriage.s, data = d, col = rangi2)
abline(m5.1)
shade(mu.PI, MAM.seq)
precis(m5.1)
# model on marriage rate
d$Marriage.s <- (d$Marriage - mean(d$Marriage))/sd(d$Marriage)
m5.2 <- map(
alist(
Divorce ~ dnorm(mu, sigma),
mu <- a + bR*Marriage.s,
a ~ dnorm(10, 10),
bR ~ dnorm(0, 1),
sigma ~ dunif(0, 10)
), data = d
)
precis(m5.2)
rm(list= ls())
data("WaffleDivorce")
dat <- WaffleDivorce
# 5M4
lds_pop <- read.csv("lds_population.tsv", sep="\t", header = F)
lds_pop$n_lds <- as.numeric(gsub("%", "", lds_pop$V5))
lds_pop$Location <- lds_pop$V2
dat <- merge(dat, lds_pop[,c("Location", "n_lds")])
dat$log_lds <- log(dat$n_lds)
dat$zPropLDS <- (dat$n_lds - mean(dat$n_lds))/sd(dat$n_lds)
dat$zLogLDS <- (dat$zPropLDS - mean(dat$zPropLDS))/sd(dat$zPropLDS)
dat$MedianAgeMarriage.s <- (dat$MedianAgeMarriage - mean(dat$MedianAgeMarriage))/
sd(dat$MedianAgeMarriage)
dat$Marriage.s <- (dat$Marriage - mean(dat$Marriage))/sd(dat$Marriage)
mlds <- map(
alist(
Divorce ~ dnorm(mu, sigma),
mu <- a + bM*Marriage.s + bA*MedianAgeMarriage.s + bL*dat$log_lds,
a ~ dnorm(10, 10),
bA ~ dnorm(0, 1),
bM ~ dnorm(0, 1),
bL ~ dnorm(0, 1),
sigma ~ dunif(0, 10)
), data = dat
)
precis(mlds)
# 5H1
data(foxes)
dat <- foxes
dat
# compute precentile interval of mean
area.seq <- seq(from = 0, to = 5, length.out = 30)
mu <- link(m1, data = data.frame(area= area.seq))
m1 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + b*area,
a ~ dnorm(5, 10),
b ~ dnorm(0, 3),
sigma ~ dunif(0, 10)
), data = dat
)
# compute precentile interval of mean
area.seq <- seq(from = 0, to = 5, length.out = 30)
mu <- link(m1, data = data.frame(area= area.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ area, data = dat, col = rangi2)
abline(m1)
m1 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + b*area,
a ~ dnorm(0, 10),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
# compute precentile interval of mean
area.seq <- seq(from = 0, to = 5, length.out = 30)
mu <- link(m1, data = data.frame(area= area.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ area, data = dat, col = rangi2)
abline(m1)
shade(mu.PI, area.seq)
# compute precentile interval of mean
area.seq <- seq(from = 0, to = 6, length.out = 30)
mu <- link(m1, data = data.frame(area= area.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ area, data = dat, col = rangi2)
abline(m1)
shade(mu.PI, area.seq)
dat
# Weight vs groupsize
m1 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + b*groupsize,
a ~ dnorm(0, 10),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
# compute precentile interval of mean
gs.seq <- seq(from = 0, to = 6, length.out = 30)
# Weight vs groupsize
m2 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + b*groupsize,
a ~ dnorm(0, 10),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
# compute precentile interval of mean
gs.seq <- seq(from = 0, to = 6, length.out = 30)
mu <- link(m2, data = data.frame(groupsize = gs.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ groupsize, data = dat, col = rangi2)
abline(m2)
# compute precentile interval of mean
gs.seq <- seq(from = 0, to = 6, length.out = nrow(dat))
# compute precentile interval of mean
gs.seq <- seq(from = 0, to = 6, length.out = nrow(dat))
mu <- link(m2, data = data.frame(groupsize = gs.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ groupsize, data = dat, col = rangi2)
abline(m2)
shade(mu.PI, area.seq)
shade(mu.PI, gs.seq)
# compute precentile interval of mean
gs.seq <- seq(from = 0, to = 10, length.out = nrow(dat))
mu <- link(m2, data = data.frame(groupsize = gs.seq))
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ groupsize, data = dat, col = rangi2)
abline(m2)
shade(mu.PI, gs.seq)
m3 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + bA*area + bG*groupsize,
a ~ dnorm(0, 10),
bA ~ dnorm(0, 10),
bG ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
area.seq <- seq(from = 0, to = 6, length.out = nrow(dat))
# Holding Groupsize constant
gs.mean <- mean(dat$groupsize)
pred.dat <- data.frame(area = area.seq, groupsize = gs.mean)
mu <- link(m3, data = pred.dat)
mu.PI <- apply(mu, 2, PI)
mu.mean <- apply(mu, 2, mean)
plot(weight ~ area, data = dat, type = "n")
# Holding Groupsize constant
gs.mean <- mean(dat$groupsize)
area.seq <- seq(from = 0, to = 6, length.out = nrow(dat))
pred.dat <- data.frame(area = area.seq, groupsize = gs.mean)
mu <- link(m3, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ area, data = dat, type = "n")
lines(area.seq, mu.mean)
lines(area.seq, mu.PI[1,], lty = 2)
lines(area.seq, mu.PI[2,], lty = 2)
plot(weight ~ area, data = dat)
lines(area.seq, mu.mean)
lines(area.seq, mu.PI[1,], lty = 2)
lines(area.seq, mu.PI[2,], lty = 2)
gs.seq <- seq(from = 0, to = 10, length.out = nrow(dat))
area.mean <- mean(dat$area)
gs.seq <- seq(from = 0, to = 10, length.out = nrow(dat))
pred.dat <- data.frame(area = area.mean, groupsize = gs.seq)
mu <- link(m3, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ groupsize, data = dat)
lines(gs.seq, mu.mean)
lines(gs.seq, mu.PI[1,], lty = 2)
lines(gs.seq, mu.PI[2,], lty = 2)
precis(m)
precis(m1)
precis(m2)
# Weight vs Area
m1 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + b*area,
a ~ dnorm(0, 10),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
# Weight vs groupsize
m2 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + b*groupsize,
a ~ dnorm(0, 10),
b ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
m3 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + bA*area + bG*groupsize,
a ~ dnorm(0, 10),
bA ~ dnorm(0, 10),
bG ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
precis(m1)
precis(m2)
precis(m3)
pairs(dat)
mu.mean <- apply(mu, 2, mean)
# compute precentile interval of mean
area.seq <- seq(from = 0, to = 6, length.out = 30)
mu <- link(m1, data = data.frame(area= area.seq))
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
#plot it all
plot(weight ~ area, data = dat, col = rangi2)
lines(area.seq, mu.mean)
shade(mu.PI, area.seq)
# 5H2
# Do foxes that move in greater areas have higher body weight GIVEN their groupsize?
# Do foxes that belong to bigger groups have higher body weight GIVEN the area size in which they move?
m3 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + bA*area + bG*groupsize,
a ~ dnorm(0, 10),
bA ~ dnorm(0, 10),
bG ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
# Holding Groupsize constant
gs.mean <- mean(dat$groupsize)
area.seq <- seq(from = 0, to = 6, length.out = nrow(dat))
pred.dat <- data.frame(area = area.seq, groupsize = gs.mean)
mu <- link(m3, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ area, data = dat)
lines(area.seq, mu.mean)
lines(area.seq, mu.PI[1,], lty = 2)
lines(area.seq, mu.PI[2,], lty = 2)
plot(weight ~ area, data = dat)
mtext("Avg. Group Size")
lines(area.seq, mu.mean)
lines(area.seq, mu.PI[1,], lty = 2)
lines(area.seq, mu.PI[2,], lty = 2)
# holding area constant
area.mean <- mean(dat$area)
gs.seq <- seq(from = 0, to = 10, length.out = nrow(dat))
pred.dat <- data.frame(area = area.mean, groupsize = gs.seq)
mu <- link(m3, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ groupsize, data = dat)
mtext("Avg. Area size")
lines(gs.seq, mu.mean)
lines(gs.seq, mu.PI[1,], lty = 2)
lines(gs.seq, mu.PI[2,], lty = 2)
plot(weight ~ area, data = dat)
mtext("Avg. Group Size")
lines(area.seq, mu.mean)
shade(area.seq, mu.PI)
# Holding Groupsize constant
gs.mean <- mean(dat$groupsize)
area.seq <- seq(from = 0, to = 6, length.out = nrow(dat))
pred.dat <- data.frame(area = area.seq, groupsize = gs.mean)
mu <- link(m3, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ area, data = dat)
mtext("Avg. Group Size")
lines(area.seq, mu.mean)
shade(area.seq, mu.PI)
shade(mu.PI, area.seq)
# holding area constant
area.mean <- mean(dat$area)
gs.seq <- seq(from = 0, to = 10, length.out = nrow(dat))
pred.dat <- data.frame(area = area.mean, groupsize = gs.seq)
mu <- link(m3, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ groupsize, data = dat)
mtext("Avg. Area size")
lines(gs.seq, mu.mean)
shade(mu.PI, gs.seq)
# 5H3
m4.1 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a +  bG*groupsize + bF*avgfood,
a ~ dnorm(0, 10),
bG ~ dnorm(0, 10),
bF ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
precis(m4.1)
pairs(dat)
precis(m3)
precis(m2)
dat
# the effect of groupsize has increased with respect to prevoius models since it
# is possitively and strongly correalted with the Average Food intake
f.seq <- seq(from = min(dat$avgfood), to = max(dat$avgfood), length.out = nrow(dat))
gs.mean <- mean(dat$groupsize)
mu <- link(m4.1, data = data.frame(avgfood = f.seq, groupsize = gs.mean))
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ avgfood, data = dat)
lines(f.seq, mu.mean)
shade(mu.PI, f.seq)
# holding Average food at mean
food.mean <- mean(dat$avgfood)
gs.seq <- seq(from = min(dat$groupsize) - 1, to = max(dat$groupsize) + 1, length.out = nrow(dat))
pred.dat <- data.frame(avgfood = food.mean, groupsize = gs.seq)
mu <- link(m4.1, data = pred.dat)
mu.mean <- apply(mu, 2, mean)
mu.PI <- apply(mu, 2, PI)
plot(weight ~ groupsize, data = dat)
lines(gs.seq, mu.mean)
shade(mu.PI, gs.seq)
plot(precis(m1))
plto(precis(m3))
plot(precis(m3))
plot(precis(m1))
plot(precis(m3))
plot(precis(m4.1))
precis(m4.1)
plot(precis(m3))
plot(precis(m4.1))
precis(m3)
precis(m4.1)
m4.2 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + bA*area + bG*groupsize + bF*avgfood,
a ~ dnorm(0, 10),
bA ~ dnorm(0, 10),
bG ~ dnorm(0, 10),
bF ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
precis(m4.2)
plot(precis(m4.2))
coeftab(m1,m2, m3)
plot(coeftab(m1,m2, m3))
plot(coeftab(m1,m2, m3, m4.1))
# Weight vs Area
m1 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + bA*area,
a ~ dnorm(0, 10),
bA ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
# Weight vs groupsize
m2 <- map(
alist(
weight ~ dnorm(mu, sigma),
mu <- a + bG*groupsize,
a ~ dnorm(0, 10),
bG ~ dnorm(0, 10),
sigma ~ dunif(0, 10)
), data = dat
)
plot(coeftab(m1,m2, m3, m4.1))
plot(coeftab(m1,m2, m3, m4.1, m4.2))
coeftab_show(m1,m2, m3, m4.1, m4.2)
coeftab_plot(m1,m2, m3, m4.1, m4.2)
library(rethinking)
sppnames <- c("afarensis", "africanus", "habilis", "boisei", "rudolfensis",
"ergaster", "sapiens")
brainvolcc <- c(438, 452, 612, 521, 752, 871, 1350)
masskg <- c(37.0, 35.5, 34.5, 41.5, 55.5, 61, 53.5)
d <- data.frame(species = sppnames, brain = brainvolcc, mass = masskg)
# Simplest model possible
m6.1 <- lm(breain ~ mass, data=d)
# Simplest model possible
m6.1 <- lm(brain ~ mass, data=d)
# compute R2
1 - var(resid(m6.1))/var(d$brain)
summary(m6.1)
m6.2 <- lm(brain ~ mass + I(mass^2), data=d)
